- name: Emacs configuration | dotfiles | Setup .emacs
  tags: dotfiles,emacs
  ansible.builtin.file:
    src: "{{ code_dir }}/my-repos/dot-emacs"
    dest: /home/{{ username }}/.emacs.d
    state: link

- name: Dotfiles configuration git worktree setup | dotfiles | Setup .git file
  tags: dotfiles
  copy:
    dest: "{{ home_dir }}/.git"
    content: |
      gitdir: {{ code_dir }}/my-repos/dotfiles/

- name: Dotfiles configuration | dotfiles | Change some configuration in `dotfiles` clone
  tags: dotfiles
  ansible.builtin.shell: |
    # Required to use $HOME like a normal repo
    git --work-tree={{ home_dir }} --git-dir={{ code_dir }}/my-repos/dotfiles/ config core.bare false
    git --work-tree={{ home_dir }} --git-dir={{ code_dir }}/my-repos/dotfiles/ checkout || echo "Checkout exists"
    git --work-tree={{ home_dir }} --git-dir={{ code_dir }}/my-repos/dotfiles/ reset

- name: bash-it profile | dotfiles | Link profile bash-it/profiles dir
  tags: dotfiles,bashit
  ansible.builtin.file:
    src: "{{ home_dir }}/.config/bash-it/profiles/{{ username }}.bash_it"
    dest: "{{ code_dir }}/misc/bash-it/profiles/{{ username }}.bash_it"
    state: link

- name: bash-it configuration | dotfiles | Run the bash_it install script (and enable profile)
  tags: dotfiles,bashit
  ansible.builtin.shell: |
    source {{ code_dir }}/misc/bash-it/install.sh --no-modify-config; \
    bash-it profile load {{ username }}
  args:
    executable: /bin/bash

- name: user applications configuration | dotfiles | Build cache database of MIME types handled by desktop files
  tags: dotfiles
  ansible.builtin.shell: |
    update-desktop-database {{ home_dir }}/.local/share/applications/
  args:
    executable: /bin/bash
